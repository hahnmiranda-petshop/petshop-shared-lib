name: PR Sanity

on:
  pull_request:
    branches: [ "main" ]

jobs:
  sanity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check PR title (Conventional-ish)
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          echo "Title: $PR_TITLE"
          if echo "$PR_TITLE" | grep -Eq '^(feat|fix|docs|style|refactor|test|chore)(\(.*\))?: .{5,}$'; then
            echo "✅ Title OK"
          else
            echo "❌ Title must follow: <type>(optional scope): <description>"
            exit 1
          fi

      # Removido: validação que exigia Closes|Fixes|Resolves no corpo do PR

      - name: Enforce commit message format <type>/#id: description
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          set -e
          echo "Validating commit messages for PR #$PR_NUMBER in $REPO"
          commits=$(gh api repos/$REPO/pulls/$PR_NUMBER/commits --paginate --jq '.[].commit.message | split("\n")[0]')
          echo "$commits" | while IFS= read -r subject; do
            [ -z "$subject" ] && continue
            echo "→ $subject"
            if echo "$subject" | grep -Eq '^(feat|fix|docs|style|refactor|test|chore|build|ci|perf|revert)/#([0-9]+): .{5,}$'; then
              echo "   ✅ OK"
            else
              echo "   ❌ Commit subject must match: <type>/#<id>: <description>"
              echo "      Example: docs/#15: add github workflow"
              exit 1
            fi
          done

      - name: Block large/binary artifacts by mistake
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -e
          files=$(jq -r '.pull_request.number' <(echo '${{ toJson(github.event) }}') | xargs -I{} \
            gh api repos/${{ github.repository }}/pulls/{}/files --paginate --jq '.[].filename')
          echo "$files" | sed '/^$/d' > changed_files.txt || true
          echo "Changed files:"
          cat changed_files.txt || true
          if grep -E '(^|/)(.*\.(zip|jar|exe|dll|so|dmg|7z|rar))$' changed_files.txt; then
            echo "❌ Binary or archive detected. Remove from PR or put in allowed locations."
            exit 1
          fi
          echo "✅ No forbidden artifacts"
